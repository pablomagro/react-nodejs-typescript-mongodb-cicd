name: 'Deploy React app to AWS - Workflow - S3 Website'

on:
  pull_request:
    paths:
      - infrastructure/**
      - frontend/**
  push:
    branches:
      - master
    paths:
      - infrastructure/**
      - frontend/**

env:
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
  unit-test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Frontend Build
        run: |
          npm ci
          npm run build

      # Publish artifact
      - name: Publish artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: './frontend/build'

      - name: Frontend Test + Coverage
        run: |
          npm run test-cov

  unit-test-infrastructure:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - run: |
          npm install -g aws-cdk
          npm install -g ts-node
          npm install -g --unsafe-perm=true esbuild

      - name: Infrastructure Test
        run: |
          npm ci
          npm run test

  code-analysis:
    runs-on: ubuntu-latest
    needs: [unit-test-frontend, unit-test-infrastructure]
    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-deploy-testing:
    runs-on: ubuntu-latest
    needs: [unit-test-frontend, unit-test-infrastructure]
    if: github.ref != 'refs/heads/master'
    defaults:
      run:
        working-directory: infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Download published artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: './frontend/build'

      - name: Install infrastructure project dependencies
        run: npm ci

      - name: Deploy to ${{ env.STACK_ENVIRONMENT }} AWS
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'deploy'
          working_dir: ./infrastructure
          cdk_stack: 'S3WebSiteStack'
          cdk_args: '--context config=${{ env.STACK_ENVIRONMENT }} --require-approval never --progress=events --no-cli-pager'
          actions_comment: false
        env:
          STACK_ENVIRONMENT: testing
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

  # Utilize the cypress-io/github-action@v6 plugin (container) as it provides caching and improves speed.
  # Alternatively, it can be created an End-to-End (E2E) environment as the  pre-production or production setup,
  # and then run tests through the E2E URL.
  e2e-run-locally:
    runs-on: ubuntu-22.04
    needs: [unit-test-frontend, build-and-deploy-testing]
    if: github.ref != 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Download published artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: './frontend/build'

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          start: npm start

  build-and-deploy-production:
    runs-on: ubuntu-latest
    needs: [unit-test-frontend, unit-test-infrastructure]
    # Manual approval only for PRODUCTION!
    environment: 'production'
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Download published artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: './frontend/build'

      - name: Install CDK dependencies
        run: |
          cd infrastructure
          npm ci

      - name: cdk diff
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'diff'
          cdk_stack: 'S3WebSiteStack'
          cdk_args: '--context config=${{ env.STACK_ENVIRONMENT }}'
          actions_comment: true
        env:
          STACK_ENVIRONMENT: production
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'deploy'
          cdk_stack: 'S3WebSiteStack'
          cdk_args: '--context config=${{ env.STACK_ENVIRONMENT }} --require-approval never --progress=events --no-cli-pager'
          actions_comment: false
        env:
          STACK_ENVIRONMENT: production
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
